package com.ksm.sport;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.ksm.dto.Order;
import com.ksm.dto.Product;
import com.ksm.dto.User;
import com.ksm.service.OrderService;
import com.ksm.service.ProductService;

@Controller
@RequestMapping(value="/order", method= {RequestMethod.POST, RequestMethod.GET})
public class OrderController {
	
	@Inject
	OrderService service;
	@Inject
	ProductService productservice;
	
	@RequestMapping(value="orderpage", method=RequestMethod.POST)
	public String orderpage(Model model, Product product, Order order) throws Exception {
		Product select = productservice.detail(product);
		model.addAttribute("product", select);
		return "Order";
	}
	@RequestMapping(value="order", method=RequestMethod.POST)
	public String order(Order order) throws Exception {
		service.insertorder(order);
		productservice.subtraction(order);
		return "home";
	}
	@RequestMapping(value="orderList", method=RequestMethod.POST)
	public String orderlist(Model model, Order order,HttpServletRequest req) throws Exception {
		HttpSession session = req.getSession();
		User user = (User) session.getAttribute("user");
		List<Order> list = null;
		list = service.OrderList(user.getId());
		model.addAttribute("list", list);
		return "OrderList";
	}
	@RequestMapping(value="orderdelete", method=RequestMethod.POST)
	public String orderdelete(Order order) throws Exception {
		System.out.println(order.getOseq());
		System.out.println(order.getQseq());
		service.deleteorder(order);
		productservice.addition(order);
		return "redirect:/order/orderList";
	}
	@RequestMapping(value="insertpricepage", method=RequestMethod.POST)
	public String insertpricepage(Order order) throws Exception {
		return "InsertPrice";
	}
	@RequestMapping(value="orderupdate", method=RequestMethod.POST)
	public String orderupdate(Order order) throws Exception {
		service.updateresult(order);
		return "redirect:/order/orderList";
	}
	@RequestMapping(value = "orderAllList", method=RequestMethod.POST)
	public String orderAllList(Order order) throws Exception {
		
	}
}
